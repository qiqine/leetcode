题目：
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

解：
/**
 * @param {number} n
 * @return {string[]}
 */
var generateParenthesis = function(n) {
    let res=[]
    dfs(n,n,'')
    function dfs(left,right,str){
        if(left>right){
            return
        }
        if(left==0&&right==0){
            res.push(str)
        }
        if(left>0)dfs(left-1,right,str+'(')
        if(right>0)dfs(left,right-1,str+')')
    }
    return res
};
