The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.



Given an integer n, return all distinct solutions to the n-queens puzzle.

Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.

Example:

Input: 4
Output: [
 [".Q..",  // Solution 1
  "...Q",
  "Q...",
  "..Q."],

 ["..Q.",  // Solution 2
  "Q...",
  "...Q",
  ".Q.."]
]
Explanation: There exist two distinct solutions to the 4-queens puzzle as shown above.
解：
 let res=[]
    let pos=[]
    for(let i=0;i<n;i++){
        pos[i]=-1
    }
    dfs(0)
    function dfs(row){
        if(row==n){
            let t='.',tem=[]
            for(let i=0;i<n;i++){
                let a=t.repeat(pos[i])+'Q'+t.repeat(n-pos[i]-1)
                tem.push(a)
            }
            res.push(tem)
            console.log(pos)
            return
        }
        for(let i=0;i<n;i++){
            if(valid(row,i)){
                pos[row]=i
                dfs(row+1)
                pos[row]=-1
            }
        }
    }
    function valid(row,col){
        for(let i=0;i<=row;i++){
            // if(pos[i]==col||pos[i]==col-i){
            if (col == pos[i] || row - i == Math.abs(col - pos[i])) {
                return false
            }
        }
        return true
    }
    return res
