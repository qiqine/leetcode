题目：
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].



解1：暴力法
/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    for(let i=0;i<nums.length-1;i++){
        for(let j=i+1;j<nums.length;j++){
            if(nums[i]+nums[j]==target){
                return [i,j]
            }
        }
    }
};

时间复杂度o(n^2)
空间复杂度o(1)

解2：hash-table
var twoSum = function(nums, target) {
    var map={} 
    nums.forEach((v,k)=>{
        map[v]=k
    })
    //forEach 不能停止
    for (let i=0;i<nums.length;i++){
        let s=target-nums[i]
        if(map[s]!==undefined&&map[s]!=i){
            return [map[s],i]
        }
    }
};

解3：少一层循环
var twoSum = function(nums, target) {
    var map = {}
    for ( let i=0;i<nums.length;i++){
        let s =target -nums[i]
        if(map[s]!==undefined){
            return [map[s],i]
        }
         map[nums[i]]=i
    }
}
